<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Percentage.App.Controls"
                    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                    xmlns:data="clr-namespace:Codify.System.Windows.Data;assembly=Codify.System.Windows">
    <Style TargetType="controls:KeyValueItemsControl"
           x:Key="{x:Type controls:KeyValueItemsControl}"
           BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="NameColumn"
                                              Width="140" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Key}" />
                        <ui:TextBlock Grid.Column="1"
                                      Text="{Binding Value}"
                                      Margin="0,5" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:BatteryInformation"
           x:Key="{x:Type controls:BatteryInformation}"
           BasedOn="{StaticResource {x:Type controls:KeyValueItemsControl}}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ui:CardControl Icon="{Binding Value.SymbolIcon}"
                                    Header="{Binding Key}">
                        <ui:TextBlock Text="{Binding Value.Value}" />
                    </ui:CardControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:BatteryLevelNotificationSetter"
           x:Key="{x:Type controls:BatteryLevelNotificationSetter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="NameColumn" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Text="{Binding StatusName, RelativeSource={RelativeSource TemplatedParent}}" />
                        <DockPanel Grid.Column="1">
                            <ui:ToggleSwitch DockPanel.Dock="Right"
                                             IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}"
                                             Margin="12,0,0,0" />
                            <TextBlock DockPanel.Dock="Right"
                                       Width="34"
                                       TextAlignment="Center"
                                       Text="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, StringFormat={}{0}%}" />
                            <Slider Margin="12,0"
                                    TickPlacement="Both"
                                    Minimum="0"
                                    Maximum="100"
                                    IsSnapToTickEnabled="True"
                                    Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    TickFrequency="5" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:AccentColourPicker">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:AccentColourPicker}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="AccentColourPickerLabelColumn" />
                            <ColumnDefinition SharedSizeGroup="AccentColourPickerComboBoxColumn" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding Label}"
                                   VerticalAlignment="Center" />
                        <ComboBox ItemsSource="{x:Static controls:AccentColourPicker.AccentBrushes}"
                                  SelectedItem="{Binding SelectedColour, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="5,0,12,0"
                                  MinWidth="75"
                                  Grid.Column="1"
                                  IsEnabled="{Binding IsAutoColour, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static data:BooleanConverter.Instance}, ConverterParameter=Invert}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Border CornerRadius="2"
                                            Height="24"
                                            MinWidth="24"
                                            Background="{Binding}" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                            <ComboBox.Template>
                                <ControlTemplate TargetType="ComboBox">
                                    <!-- This is a copy of the DefaultComboBoxStyle template from "Wpf.Ui.Controls.ComboBox" -->
                                    <!-- The original template hard codes the items panel in the popup, it doesn't honour the value set in the "ComboBox.ItemsPanel" property. -->
                                    <!-- Copying the original template just to overwrite the items panel to a wrap panel. -->
                                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                        <Border
                                            x:Name="ContentBorder"
                                            Grid.Row="0"
                                            MinWidth="{TemplateBinding MinWidth}"
                                            MinHeight="{TemplateBinding MinHeight}"
                                            Padding="0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
                                                        <ContentPresenter
                                                            Name="PART_ContentPresenter"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Stretch"
                                                            Content="{TemplateBinding SelectionBoxItem}"
                                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                            IsHitTestVisible="False"
                                                            TextElement.Foreground="{TemplateBinding Foreground}" />
                                                    </Grid>
                                                    <Grid Grid.Column="1"
                                                          Margin="{DynamicResource ComboBoxChevronMargin}">
                                                        <ui:SymbolIcon
                                                            x:Name="ChevronIcon"
                                                            Margin="0"
                                                            VerticalAlignment="Center"
                                                            FontSize="{DynamicResource ComboBoxChevronSize}"
                                                            Foreground="{DynamicResource ComboBoxDropDownGlyphForeground}"
                                                            RenderTransformOrigin="0.5, 0.5"
                                                            Symbol="ChevronDown24">
                                                            <ui:SymbolIcon.RenderTransform>
                                                                <RotateTransform Angle="0" />
                                                            </ui:SymbolIcon.RenderTransform>
                                                        </ui:SymbolIcon>
                                                    </Grid>
                                                    <Grid
                                                        Grid.Column="0"
                                                        Grid.ColumnSpan="2"
                                                        Margin="0">
                                                        <ToggleButton
                                                            Name="ToggleButton"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Stretch"
                                                            ClickMode="Press"
                                                            Focusable="False"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Style="{DynamicResource DefaultComboBoxToggleButtonStyle}" />
                                                    </Grid>
                                                    <Grid Grid.Column="0" Margin="{TemplateBinding Padding}">
                                                        <TextBox
                                                            x:Name="PART_EditableTextBox"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Stretch"
                                                            FontSize="{TemplateBinding FontSize}"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            IsReadOnly="{TemplateBinding IsReadOnly}"
                                                            Style="{DynamicResource DefaultComboBoxTextBoxStyle}" />
                                                    </Grid>
                                                </Grid>
                                                <Popup
                                                    x:Name="Popup"
                                                    MinWidth="{TemplateBinding ActualWidth}"
                                                    VerticalAlignment="Center"
                                                    AllowsTransparency="True"
                                                    Focusable="False"
                                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                                    Placement="{TemplateBinding Popup.Placement}"
                                                    PopupAnimation="{TemplateBinding Popup.PopupAnimation}"
                                                    VerticalOffset="1">
                                                    <Border
                                                        x:Name="DropDownBorder"
                                                        Margin="0"
                                                        Padding="0,4,0,6"
                                                        Background="{DynamicResource ComboBoxDropDownBackground}"
                                                        BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}"
                                                        BorderThickness="1"
                                                        CornerRadius="{DynamicResource PopupCornerRadius}"
                                                        SnapsToDevicePixels="True">
                                                        <Border.RenderTransform>
                                                            <TranslateTransform />
                                                        </Border.RenderTransform>
                                                        <Grid>
                                                            <ui:DynamicScrollViewer
                                                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                Margin="0"
                                                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                SnapsToDevicePixels="True"
                                                                TextElement.FontSize="{TemplateBinding FontSize}"
                                                                TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                                TextElement.Foreground="{TemplateBinding Foreground}"
                                                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                                <WrapPanel
                                                                    MaxWidth="400"
                                                                    Orientation="Horizontal"
                                                                    IsItemsHost="True"
                                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                                    TextElement.FontSize="{TemplateBinding FontSize}" />
                                                            </ui:DynamicScrollViewer>
                                                        </Grid>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                        </Border>
                                        <Border
                                            x:Name="AccentBorder"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            BorderBrush="{DynamicResource ComboBoxBorderBrushFocused}"
                                            BorderThickness="{DynamicResource ComboBoxAccentBorderThemeThickness}"
                                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                                            Visibility="Collapsed" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDropDownOpen" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="ChevronIcon"
                                                            Storyboard.TargetProperty="(ui:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                                            From="0"
                                                            To="180"
                                                            Duration="00:00:00.167" />
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="DropDownBorder"
                                                            Storyboard.TargetProperty="(Border.RenderTransform).(TranslateTransform.Y)"
                                                            From="-90"
                                                            To="0"
                                                            Duration="00:00:00.167">
                                                            <DoubleAnimation.EasingFunction>
                                                                <CircleEase EasingMode="EaseOut" />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="ChevronIcon"
                                                            Storyboard.TargetProperty="(ui:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                                            From="180"
                                                            To="0"
                                                            Duration="00:00:00.167" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="False">
                                            <Setter TargetName="DropDownBorder" Property="MinHeight"
                                                    Value="{DynamicResource ComboBoxPopupMinHeight}" />
                                        </Trigger>
                                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="False">
                                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                        </Trigger>
                                        <Trigger Property="IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                        </Trigger>
                                        <Trigger Property="IsEditable" Value="True">
                                            <Setter Property="IsTabStop" Value="False" />
                                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"
                                                    Value="Visible" />
                                            <Setter TargetName="PART_ContentPresenter" Property="Visibility"
                                                    Value="Hidden" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled" Value="True" />
                                                <Condition Property="IsKeyboardFocusWithin" Value="True" />
                                                <Condition Property="IsEditable" Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ContentBorder" Property="Background"
                                                    Value="{DynamicResource ComboBoxBackgroundFocused}" />
                                            <Setter TargetName="AccentBorder" Property="Visibility" Value="Visible" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled" Value="True" />
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="ContentBorder" Property="Background"
                                                    Value="{DynamicResource ComboBoxBackgroundPointerOver}" />
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="ContentBorder" Property="Background"
                                                    Value="{DynamicResource ComboBoxBackgroundDisabled}" />
                                            <Setter TargetName="ContentBorder" Property="BorderBrush"
                                                    Value="{DynamicResource ComboBoxBorderBrushDisabled}" />
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource ComboBoxForegroundDisabled}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ComboBox.Template>
                        </ComboBox>
                        <CheckBox IsChecked="{Binding IsAutoColour, RelativeSource={RelativeSource TemplatedParent}}"
                                  Content="Auto"
                                  ToolTip="Use system text colour"
                                  Grid.Column="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>